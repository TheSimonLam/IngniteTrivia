{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = Text;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _text = require(\"./text.presets\");\n\nvar _i18n = require(\"../../i18n\");\n\nvar _ramda = require(\"ramda\");\n\nvar _jsxFileName = \"E:\\\\Projects\\\\IgniteTrivia\\\\app\\\\components\\\\text\\\\text.tsx\";\n\nfunction Text(props) {\n  var _props$preset = props.preset,\n      preset = _props$preset === void 0 ? \"default\" : _props$preset,\n      tx = props.tx,\n      txOptions = props.txOptions,\n      text = props.text,\n      children = props.children,\n      styleOverride = props.style,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"preset\", \"tx\", \"txOptions\", \"text\", \"children\", \"style\"]);\n  var i18nText = tx && (0, _i18n.translate)(tx, txOptions);\n  var content = i18nText || text || children;\n  var style = (0, _ramda.mergeAll)((0, _ramda.flatten)([_text.presets[preset] || _text.presets.default, styleOverride]));\n  return React.createElement(_reactNative.Text, (0, _extends2.default)({}, rest, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), content);\n}","map":{"version":3,"sources":["E:/Projects/IgniteTrivia/app/components/text/text.tsx"],"names":["Text","props","preset","tx","txOptions","text","children","styleOverride","style","rest","i18nText","content","presets","default"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAOO,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAAA,sBAEwDA,KAFxD,CAE7BC,MAF6B;AAAA,MAE7BA,MAF6B,8BAEpB,SAFoB;AAAA,MAETC,EAFS,GAEwDF,KAFxD,CAETE,EAFS;AAAA,MAELC,SAFK,GAEwDH,KAFxD,CAELG,SAFK;AAAA,MAEMC,IAFN,GAEwDJ,KAFxD,CAEMI,IAFN;AAAA,MAEYC,QAFZ,GAEwDL,KAFxD,CAEYK,QAFZ;AAAA,MAE6BC,aAF7B,GAEwDN,KAFxD,CAEsBO,KAFtB;AAAA,MAE+CC,IAF/C,0CAEwDR,KAFxD;AAKrC,MAAMS,QAAQ,GAAGP,EAAE,IAAI,qBAAUA,EAAV,EAAcC,SAAd,CAAvB;AACA,MAAMO,OAAO,GAAGD,QAAQ,IAAIL,IAAZ,IAAoBC,QAApC;AAEA,MAAME,KAAK,GAAG,qBAAS,oBAAQ,CAACI,cAAQV,MAAR,KAAmBU,cAAQC,OAA5B,EAAqCN,aAArC,CAAR,CAAT,CAAd;AAEA,SACE,oBAAC,iBAAD,6BAAqBE,IAArB;AAA2B,IAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGG,OADH,CADF;AAKD","sourcesContent":["import * as React from \"react\"\nimport { Text as ReactNativeText } from \"react-native\"\nimport { presets } from \"./text.presets\"\nimport { TextProps } from \"./text.props\"\nimport { translate } from \"../../i18n\"\nimport { mergeAll, flatten } from \"ramda\"\n\n/**\n * For your text displaying needs.\n *\n * This component is a HOC over the built-in React Native one.\n */\nexport function Text(props: TextProps) {\n  // grab the props\n  const { preset = \"default\", tx, txOptions, text, children, style: styleOverride, ...rest } = props\n\n  // figure out which content to use\n  const i18nText = tx && translate(tx, txOptions)\n  const content = i18nText || text || children\n\n  const style = mergeAll(flatten([presets[preset] || presets.default, styleOverride]))\n\n  return (\n    <ReactNativeText {...rest} style={style}>\n      {content}\n    </ReactNativeText>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}