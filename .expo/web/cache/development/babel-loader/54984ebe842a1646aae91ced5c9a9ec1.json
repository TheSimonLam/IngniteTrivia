{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderConfig;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeScreens = require(\"react-native-screens\");\n\nvar _native = require(\"@react-navigation/native\");\n\nfunction HeaderConfig(props) {\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var route = props.route,\n      title = props.title,\n      headerRight = props.headerRight,\n      headerTitle = props.headerTitle,\n      headerBackTitle = props.headerBackTitle,\n      _props$headerBackTitl = props.headerBackTitleVisible,\n      headerBackTitleVisible = _props$headerBackTitl === void 0 ? true : _props$headerBackTitl,\n      headerHideBackButton = props.headerHideBackButton,\n      headerHideShadow = props.headerHideShadow,\n      headerTintColor = props.headerTintColor,\n      headerLargeTitle = props.headerLargeTitle,\n      headerTranslucent = props.headerTranslucent,\n      _props$headerStyle = props.headerStyle,\n      headerStyle = _props$headerStyle === void 0 ? {} : _props$headerStyle,\n      _props$headerTitleSty = props.headerTitleStyle,\n      headerTitleStyle = _props$headerTitleSty === void 0 ? {} : _props$headerTitleSty,\n      _props$headerLargeTit = props.headerLargeTitleStyle,\n      headerLargeTitleStyle = _props$headerLargeTit === void 0 ? {} : _props$headerLargeTit,\n      _props$headerBackTitl2 = props.headerBackTitleStyle,\n      headerBackTitleStyle = _props$headerBackTitl2 === void 0 ? {} : _props$headerBackTitl2,\n      headerShown = props.headerShown,\n      gestureEnabled = props.gestureEnabled;\n  return React.createElement(_reactNativeScreens.ScreenStackHeaderConfig, {\n    hidden: headerShown === false,\n    translucent: headerTranslucent === true,\n    hideShadow: headerHideShadow,\n    hideBackButton: headerHideBackButton,\n    title: headerTitle !== undefined ? headerTitle : title !== undefined ? title : route.name,\n    titleFontFamily: headerTitleStyle.fontFamily,\n    titleFontSize: headerTitleStyle.fontSize,\n    titleColor: headerTitleStyle.color !== undefined ? headerTitleStyle.color : headerTintColor !== undefined ? headerTintColor : colors.text,\n    backTitle: headerBackTitleVisible ? headerBackTitle : ' ',\n    backTitleFontFamily: headerBackTitleStyle.fontFamily,\n    backTitleFontSize: headerBackTitleStyle.fontSize,\n    color: headerTintColor !== undefined ? headerTintColor : colors.primary,\n    gestureEnabled: gestureEnabled,\n    largeTitle: headerLargeTitle,\n    largeTitleFontFamily: headerLargeTitleStyle.fontFamily,\n    largeTitleFontSize: headerLargeTitleStyle.fontSize,\n    backgroundColor: headerStyle.backgroundColor !== undefined ? headerStyle.backgroundColor : colors.card\n  }, headerRight !== undefined ? React.createElement(_reactNativeScreens.ScreenStackHeaderRightView, null, headerRight()) : null);\n}","map":{"version":3,"sources":["HeaderConfig.tsx"],"names":["colors","headerBackTitleVisible","headerStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","gestureEnabled","headerShown","headerTranslucent","headerTitle","title","route","headerTintColor","card","headerRight"],"mappings":";;;;;;;AAAA;;AACA;;AAKA;;AAOe,SAAA,YAAA,CAAA,KAAA,EAAoC;AAAA,kBACjD,uBADiD;AAAA,MACzCA,MADyC,aACzCA,MADyC;;AAAA,MAE3C,KAF2C,GAEjD,KAFiD,CAE3C,KAF2C;AAAA,MAE3C,KAF2C,GAEjD,KAFiD,CAE3C,KAF2C;AAAA,MAE3C,WAF2C,GAEjD,KAFiD,CAE3C,WAF2C;AAAA,MAE3C,WAF2C,GAEjD,KAFiD,CAE3C,WAF2C;AAAA,MAE3C,eAF2C,GAEjD,KAFiD,CAE3C,eAF2C;AAAA,8BAEjD,KAFiD,CAQ/CC,sBAR+C;AAAA,MAQ/CA,sBAR+C,sCAE3C,IAF2C;AAAA,MAE3C,oBAF2C,GAEjD,KAFiD,CAE3C,oBAF2C;AAAA,MAE3C,gBAF2C,GAEjD,KAFiD,CAE3C,gBAF2C;AAAA,MAE3C,eAF2C,GAEjD,KAFiD,CAE3C,eAF2C;AAAA,MAE3C,gBAF2C,GAEjD,KAFiD,CAE3C,gBAF2C;AAAA,MAE3C,iBAF2C,GAEjD,KAFiD,CAE3C,iBAF2C;AAAA,2BAEjD,KAFiD,CAc/CC,WAd+C;AAAA,MAc/CA,WAd+C,mCAE3C,EAF2C;AAAA,8BAEjD,KAFiD,CAe/CC,gBAf+C;AAAA,MAe/CA,gBAf+C,sCAE3C,EAF2C;AAAA,8BAEjD,KAFiD,CAgB/CC,qBAhB+C;AAAA,MAgB/CA,qBAhB+C,sCAE3C,EAF2C;AAAA,+BAEjD,KAFiD,CAiB/CC,oBAjB+C;AAAA,MAiB/CA,oBAjB+C,uCAE3C,EAF2C;AAAA,MAE3C,WAF2C,GAEjD,KAFiD,CAE3C,WAF2C;AAAA,MAmB/CC,cAnB+C,GAEjD,KAFiD,CAmB/CA,cAnB+C;AAsBjD,SACE,KAAA,CAAA,aAAA,CAAA,2CAAA,EAAA;AACE,IAAA,MAAM,EAAEC,WAAW,KADrB,KAAA;AAEE,IAAA,WAAW,EAAEC,iBAAiB,KAFhC,IAAA;AAGE,IAAA,UAAU,EAHZ,gBAAA;AAIE,IAAA,cAAc,EAJhB,oBAAA;AAKE,IAAA,KAAK,EACHC,WAAW,KAAXA,SAAAA,GAAAA,WAAAA,GAEIC,KAAK,KAALA,SAAAA,GAAAA,KAAAA,GAEAC,KAAK,CAVb,IAAA;AAYE,IAAA,eAAe,EAAER,gBAAgB,CAZnC,UAAA;AAaE,IAAA,aAAa,EAAEA,gBAAgB,CAbjC,QAAA;AAcE,IAAA,UAAU,EACRA,gBAAgB,CAAhBA,KAAAA,KAAAA,SAAAA,GACIA,gBAAgB,CADpBA,KAAAA,GAEIS,eAAe,KAAfA,SAAAA,GAAAA,eAAAA,GAEAZ,MAAM,CAnBd,IAAA;AAqBE,IAAA,SAAS,EAAEC,sBAAsB,GAAA,eAAA,GArBnC,GAAA;AAsBE,IAAA,mBAAmB,EAAEI,oBAAoB,CAtB3C,UAAA;AAuBE,IAAA,iBAAiB,EAAEA,oBAAoB,CAvBzC,QAAA;AAwBE,IAAA,KAAK,EAAEO,eAAe,KAAfA,SAAAA,GAAAA,eAAAA,GAAkDZ,MAAM,CAxBjE,OAAA;AA2BE,IAAA,cAAc,EA3BhB,cAAA;AA4BE,IAAA,UAAU,EA5BZ,gBAAA;AA6BE,IAAA,oBAAoB,EAAEI,qBAAqB,CA7B7C,UAAA;AA8BE,IAAA,kBAAkB,EAAEA,qBAAqB,CA9B3C,QAAA;AA+BE,IAAA,eAAe,EACbF,WAAW,CAAXA,eAAAA,KAAAA,SAAAA,GACIA,WAAW,CADfA,eAAAA,GAEIF,MAAM,CAACa;AAlCf,GAAA,EAqCGC,WAAW,KAAXA,SAAAA,GACC,KAAA,CAAA,aAAA,CAAA,8CAAA,EAAA,IAAA,EAA6BA,WAD9BA,EACC,CADDA,GAtCL,IACE,CADF;AA2CD","sourcesContent":["import * as React from 'react';\nimport {\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderRightView,\n  // eslint-disable-next-line import/no-unresolved\n} from 'react-native-screens';\nimport { Route, useTheme } from '@react-navigation/native';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig(props: Props) {\n  const { colors } = useTheme();\n  const {\n    route,\n    title,\n    headerRight,\n    headerTitle,\n    headerBackTitle,\n    headerBackTitleVisible = true,\n    headerHideBackButton,\n    headerHideShadow,\n    headerTintColor,\n    headerLargeTitle,\n    headerTranslucent,\n    headerStyle = {},\n    headerTitleStyle = {},\n    headerLargeTitleStyle = {},\n    headerBackTitleStyle = {},\n    headerShown,\n    gestureEnabled,\n  } = props;\n\n  return (\n    <ScreenStackHeaderConfig\n      hidden={headerShown === false}\n      translucent={headerTranslucent === true}\n      hideShadow={headerHideShadow}\n      hideBackButton={headerHideBackButton}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      color={headerTintColor !== undefined ? headerTintColor : colors.primary}\n      // Keep this temporarily for compatibility with old versions of screens\n      // @ts-ignore\n      gestureEnabled={gestureEnabled}\n      largeTitle={headerLargeTitle}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      backgroundColor={\n        headerStyle.backgroundColor !== undefined\n          ? headerStyle.backgroundColor\n          : colors.card\n      }\n    >\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>{headerRight()}</ScreenStackHeaderRightView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}