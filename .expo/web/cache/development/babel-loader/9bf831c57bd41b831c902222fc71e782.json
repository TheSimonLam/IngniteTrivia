{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Environment = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _api = require(\"../services/api\");\n\nvar Environment = function () {\n  function Environment() {\n    (0, _classCallCheck2.default)(this, Environment);\n    this.api = new _api.Api();\n  }\n\n  (0, _createClass2.default)(Environment, [{\n    key: \"setup\",\n    value: function setup() {\n      return _regenerator.default.async(function setup$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(this.api.setup());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n  return Environment;\n}();\n\nexports.Environment = Environment;","map":{"version":3,"sources":["E:/Projects/IgniteTrivia/app/models/environment.ts"],"names":["Environment","api","Api","setup"],"mappings":";;;;;;;;;;;;;AAAA;;IAMaA,W;AACX,yBAAc;AAAA;AACZ,SAAKC,GAAL,GAAW,IAAIC,QAAJ,EAAX;AACD;;;;;;;;;;gDAGO,KAAKD,GAAL,CAASE,KAAT,E","sourcesContent":["import { Api } from \"../services/api\"\n\n/**\n * The environment is a place where services and shared dependencies between\n * models live.  They are made available to every model via dependency injection.\n */\nexport class Environment {\n  constructor() {\n    this.api = new Api()\n  }\n\n  async setup() {\n    await this.api.setup()\n  }\n\n  /**\n   * Our api.\n   */\n  api: Api\n}\n"]},"metadata":{},"sourceType":"script"}