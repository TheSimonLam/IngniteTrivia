{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setRootNavigation = exports.RootNavigation = void 0;\nvar RootNavigation = {\n  navigate: function navigate(name) {\n    name;\n  },\n  goBack: function goBack() {},\n  resetRoot: function resetRoot(state) {},\n  getRootState: function getRootState() {\n    return {};\n  }\n};\nexports.RootNavigation = RootNavigation;\n\nvar setRootNavigation = function setRootNavigation(ref) {\n  var _loop = function _loop(method) {\n    RootNavigation[method] = function () {\n      if (ref.current) {\n        var _ref$current;\n\n        return (_ref$current = ref.current)[method].apply(_ref$current, arguments);\n      }\n    };\n  };\n\n  for (var method in RootNavigation) {\n    _loop(method);\n  }\n};\n\nexports.setRootNavigation = setRootNavigation;","map":{"version":3,"sources":["E:/Projects/IgniteTrivia/app/navigation/navigation-service.tsx"],"names":["RootNavigation","navigate","name","goBack","resetRoot","state","getRootState","setRootNavigation","ref","method","current"],"mappings":";;;;AAGO,IAAMA,cAAc,GAAG;AAC5BC,EAAAA,QAD4B,oBACnBC,IADmB,EACL;AACrBA,IAAAA,IAAI;AACL,GAH2B;AAI5BC,EAAAA,MAJ4B,oBAInB,CAAE,CAJiB;AAK5BC,EAAAA,SAL4B,qBAKlBC,KALkB,EAKuC,CAAE,CALzC;AAM5BC,EAAAA,YAN4B,0BAMI;AAC9B,WAAO,EAAP;AACD;AAR2B,CAAvB;;;AAWA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAkD;AAAA,6BACtEC,MADsE;AAE/ET,IAAAA,cAAc,CAACS,MAAD,CAAd,GAAyB,YAAkB;AACzC,UAAID,GAAG,CAACE,OAAR,EAAiB;AAAA;;AACf,eAAO,gBAAAF,GAAG,CAACE,OAAJ,EAAYD,MAAZ,gCAAP;AACD;AACF,KAJD;AAF+E;;AACjF,OAAK,IAAMA,MAAX,IAAqBT,cAArB,EAAqC;AAAA,UAA1BS,MAA0B;AAMpC;AACF,CARM","sourcesContent":["import React from \"react\"\nimport { PartialState, NavigationState, NavigationContainerRef } from \"@react-navigation/native\"\n\nexport const RootNavigation = {\n  navigate(name: string) {\n    name // eslint-disable-line no-unused-expressions\n  },\n  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  getRootState(): NavigationState {\n    return {} as any\n  },\n}\n\nexport const setRootNavigation = (ref: React.RefObject<NavigationContainerRef>) => {\n  for (const method in RootNavigation) {\n    RootNavigation[method] = (...args: any) => {\n      if (ref.current) {\n        return ref.current[method](...args)\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}