{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAsyncStorage = useAsyncStorage;\n\nvar _AsyncStorage = _interopRequireDefault(require(\"./AsyncStorage\"));\n\nfunction useAsyncStorage(key) {\n  return {\n    getItem: function getItem() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _AsyncStorage.default.getItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    setItem: function setItem() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _AsyncStorage.default.setItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    mergeItem: function mergeItem() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _AsyncStorage.default.mergeItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    removeItem: function removeItem() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _AsyncStorage.default.removeItem.apply(_AsyncStorage.default, [key].concat(args));\n    }\n  };\n}","map":{"version":3,"sources":["E:/Projects/IgniteTrivia/node_modules/@react-native-community/async-storage/lib/hooks.js"],"names":["useAsyncStorage","key","getItem","args","AsyncStorage","setItem","mergeItem","removeItem"],"mappings":";;;;;;;AAIA;;AAiBO,SAASA,eAAT,CAAyBC,GAAzB,EAAwD;AAC7D,SAAO;AACLC,IAAAA,OAAO,EAAE;AAAA,wCAAIC,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAAaC,sBAAaF,OAAb,+BAAqBD,GAArB,SAA6BE,IAA7B,EAAb;AAAA,KADJ;AAELE,IAAAA,OAAO,EAAE;AAAA,yCAAIF,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAAaC,sBAAaC,OAAb,+BAAqBJ,GAArB,SAA6BE,IAA7B,EAAb;AAAA,KAFJ;AAGLG,IAAAA,SAAS,EAAE;AAAA,yCAAIH,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAAaC,sBAAaE,SAAb,+BAAuBL,GAAvB,SAA+BE,IAA/B,EAAb;AAAA,KAHN;AAILI,IAAAA,UAAU,EAAE;AAAA,yCAAIJ,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAAaC,sBAAaG,UAAb,+BAAwBN,GAAxB,SAAgCE,IAAhC,EAAb;AAAA;AAJP,GAAP;AAMD","sourcesContent":["/**\n * @format\n */\n\nimport AsyncStorage from './AsyncStorage';\n\ntype AsyncStorageHook = {\n  getItem: (\n    callback?: ?(error: ?Error, result: string | null) => void,\n  ) => Promise<string | null>,\n  setItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  mergeItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  removeItem: (callback?: ?(error: ?Error) => void) => Promise<null>,\n};\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}